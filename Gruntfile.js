module.exports = function( grunt ) {

    "use strict";

    var srcHintOptionsBrowser = grunt.file.readJSON("src/.jshintrc"),
        srcHintOptionsNode    = grunt.file.readJSON("src/.jshintrc");
    srcHintOptionsBrowser.browser = true;
    srcHintOptionsNode.node = true;

    grunt.initConfig({
        pkg: grunt.file.readJSON("package.json"),
        clean: [
            "<%= concat.browser.dest %>",
            "<%= Object.keys(uglify.all.files)[0] %>",
            "<%= uglify.all.options.sourceMap %>"
        ],
        concat: {
            browser: {
                dest: "dist/data-api/v1/js/all.js",
                src: [
                    "src/data-api/v1/intro.js",
                    "src/data-api/v1/core.js",
                    "src/data-api/v1/cookie.js",
                    "src/data-api/v1/json.js",
                    "src/data-api/v1/endpoints-intro.js",
                    "src/data-api/v1/endpoints.json",
                    "src/data-api/v1/endpoints-outro.js",
                    "src/data-api/v1/exports.js",
                    "src/data-api/v1/outro.js"
                ]
            },
            node: {
                dest: "lib/data-api/v1/node-all.js",
                src: [
                    "src/data-api/v1/intro.js",
                    "src/data-api/v1/window.js",
                    "src/data-api/v1/core.js",
                    "src/data-api/v1/cookie.js",
                    "src/data-api/v1/json.js",
                    "src/data-api/v1/endpoints-intro.js",
                    "src/data-api/v1/endpoints.json",
                    "src/data-api/v1/endpoints-outro.js",
                    "src/data-api/v1/exports.js",
                    "src/data-api/v1/outro.js"
                ]
            }
        },
        watch: {
            files: [ "src/**/*.js" ],
            tasks: "dev"
        },
        uglify: {
            all: {
                files: {
                    "dist/data-api/v1/js/all.min.js": [ "dist/data-api/v1/js/all.js" ]
                },
                options: {
                    banner: "/* Copyright (c) 2013 Six Apart, Ltd.\n * This file is generated by Movable Type JavaScript SDK.\n * Consult the source files for their respective licenses and copyrights.\n * <%= pkg.homepage %>\n */\n",
                    sourceMap: "dist/data-api/v1/js/all.min.map",
                    sourceMappingURL: "all.min.map",
                    report: "min",
                    beautify: {
                        ascii_only: true
                    },
                    compress: {
                        hoist_funs: false,
                        join_vars: false,
                        loops: false,
                        unused: false
                    },
                    mangle: {
                        // saves some bytes when gzipped
                        except: ["undefined"]
                    }
                }
            }
        },
        jshint: {
            browser: {
                src: [
                    "src/data-api/v1/core.js"
                ],
                options: srcHintOptionsBrowser
            },
            node: {
                src: [
                    "src/data-api/v1/core.js",
                    "src/data-api/v1/window.js",
                    "lib/movabletype.js"
                ],
                options: srcHintOptionsNode
            },
            grunt: {
                src: ["Gruntfile.js"],
                options: {
                    jshintrc: ".jshintrc"
                }
            }
        }
    });

    grunt.registerTask("update-data-api-endpoints", function() {
        var done  = this.async(),
            ver   = process.env.MT_DATA_API_VERSION,
            path  = require("path"),
            fs    = require("fs"),
            exec  = require("child_process").exec,
            base  = path.dirname(fs.realpathSync(__filename)),
            dest  = path.join(base, "src", "data-api", "v" + ver, "endpoints.json"),
            bin   = path.join(base, "bin/mt-data-api-endpoints"),
            cmd   = [
                bin,
                process.env.MT_DATA_API_BASE_URL,
                ver
            ].join(" ");

        exec(cmd, function(err, stdout, stderr) {
            if (err) {
                console.error(stderr);
                return done(false);
            }

            fs.writeFileSync(dest, stdout, "utf8");

            done();
        });
    });

    grunt.loadNpmTasks("grunt-contrib-jshint");
    grunt.loadNpmTasks("grunt-contrib-clean");
    grunt.loadNpmTasks("grunt-contrib-watch");
    grunt.loadNpmTasks("grunt-contrib-concat");
    grunt.loadNpmTasks("grunt-contrib-uglify");

    grunt.registerTask("default", "build");
    grunt.registerTask("build", ["concat", "jshint", "uglify"]);
    grunt.registerTask("dev", ["concat", "jshint"]);
};
